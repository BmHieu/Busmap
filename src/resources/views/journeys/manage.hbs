<div class="mb-4 scrollbar">
    <div class="container">
        <div>
            <h2>Quản lý tuyến xe buýt</h1>
        </div>
        <div style="width:100%; height: 600px" id="viewDiv"
            class="esri-view esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge esri-view-orientation-landscape esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge">
            <div class="esri-view-root">
                <div class="esri-view-surface esri-view-surface--touch-none" role="application" tabindex="0">
                    <canvas style="width: 478px; height: 450px; display: block;" width="478" height="450">
                    </canvas>
                </div>
                <div class="esri-overlay-surface">
                    <div style="visibility: hidden;"> </div>
                </div>
                <div class="esri-ui" style="inset: 0px;">
                    <div class="esri-ui-inner-container esri-ui-corner-container" style="inset: 15px 15px 30px;">
                        <div class="esri-ui-top-left esri-ui-corner">
                            <div class="esri-component esri-zoom esri-widget">
                                <div class="esri-widget--button esri-widget esri-interactive" role="button" tabindex="0"
                                    title="Zoom in">
                                    <span aria-hidden="true" role="presentation"
                                        class="esri-icon esri-icon-plus"></span>
                                    <span class="esri-icon-font-fallback-text">Zoom in</span>
                                </div>
                                <div class="esri-widget--button esri-widget esri-interactive" role="button" tabindex="0"
                                    title="Zoom out">
                                    <span aria-hidden="true" role="presentation" class="esri-icon esri-icon-minus">

                                    </span>
                                    <span class="esri-icon-font-fallback-text">Zoom out</span>
                                </div>
                            </div>
                        </div>
                        <div class="esri-ui-top-right esri-ui-corner"></div>
                        <div class="esri-ui-bottom-left esri-ui-corner"></div>
                        <div class="esri-ui-bottom-right esri-ui-corner"></div>
                    </div>
                    <div class="esri-ui-inner-container esri-ui-manual-container">
                        <div class="esri-component esri-attribution esri-widget">
                            <div class="esri-attribution__sources esri-interactive" tabindex="0" role="button">Esri,
                                NASA,
                                NGA, USGS | Esri Community Maps Contributors, Esri, HERE, Garmin, METI/NASA, USGS
                            </div>
                            <div class="esri-attribution__powered-by">Powered by <a
                                    class="esri-attribution__link esri-widget__anchor" href="http://www.esri.com/"
                                    target="_blank" rel="noreferrer">Esri</a></div>
                        </div>
                        <div class="esri-component esri-popup" role="presentation"></div>
                        <div class="esri-component esri-spinner"></div>
                    </div>
                </div>
            </div>
            <div class="esri-view-user-storage"></div>
        </div>
        <div class="row mb-5" style="width:100%; height: auto">
            <table class="table mt-4 mb-5">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Tuyến
                        </th>
                        <th scope="col">Tên tuyến
                        </th>
                        <th scope="col">Độ dài
                        </th>
                        <th scope="col">Giá vé
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {{#each journeys}}
                    <tr>
                        <th scope="row">
                            <div class="form-check">
                                <label class="form-check-label" for="defaultCheck">
                                    {{sum @index 1}}
                                </label>
                            </div>
                        </th>
                        <td id="JourneyName{{sum @index 1}}" value="{{this.name}}">{{this.name}}</td>
                        <td id="JourneyFirstLast{{sum @index 1}}" value="{{this.first_last}}">{{this.first_last}}</td>
                        <td id="JourneyLength{{sum @index 1}}" value="{{this.length}}">{{this.length}}</td>
                        <td id="JourneyPriceTicket{{sum @index 1}}" value="{{this.priceticket}}">{{this.priceticket}}</td>
                    </tr>
                    <div style="visibility: hidden" id="JourneyPaths{{sum @index 1}}" value="{{this.paths}}"></div>
                    {{else}}
                    <tr>
                        <td colspan="5" class="text-center">
                            Bạn chưa tạo tuyến đường nào.
                            <a href="/journeys/create">Tạo tuyến đường</a>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    require([
        "esri/config",
        "esri/Map",
        "esri/views/MapView",
        "esri/rest/locator",
        "esri/widgets/Track",
        "esri/Graphic",
        "esri/layers/GraphicsLayer",
        "esri/widgets/Search"
    ], (esriConfig, Map, MapView, locator, Track, Graphic, GraphicsLayer, Search) => {

        esriConfig.apiKey = "AAPK1abceff074ac40efb53ec5b42a3eabf7h9BXaNUytC9SkeUdeDI6fVD4r_h2Hd5ZBwmtkd9B3AGk50DISEoXs4iYLxGCiVP8";

        const map = new Map({
            basemap: "arcgis-navigation" // Basemap layer
        });

        const view = new MapView({
            map: map,
            center: [106.75, 10.83],
            zoom: 11,
            container: "viewDiv"
        });

        const graphicsLayer = new GraphicsLayer();
        map.add(graphicsLayer);

        let indexOfLine = 1;
        var ArrayPaths = [];
        var ArrayJourneys = [];

        while (document.getElementById("JourneyPaths" + indexOfLine) != null) {
            var getdataPath = document.getElementById("JourneyPaths" + indexOfLine).getAttribute("value");
            var journeyName = document.getElementById("JourneyName" + indexOfLine).getAttribute("value");
            var journeyFirstLast = document.getElementById("JourneyFirstLast" + indexOfLine).getAttribute("value");
            var journeyLength = document.getElementById("JourneyLength" + indexOfLine).getAttribute("value");
            var journeyPriceTicket = document.getElementById("JourneyPriceTicket" + indexOfLine).getAttribute("value");

            const _Regex = /[\[\] ,\n]+/g;
            var _DataArraySplitedCharacters = getdataPath.split(_Regex);

            if (_DataArraySplitedCharacters.length >= 2) {
                var _DataArrayConverted = [];
                for (let j = 0; j < _DataArraySplitedCharacters.length; j++) {
                    var _ArrayTemp = [];
                    if (_DataArraySplitedCharacters[j] != []) {
                        _ArrayTemp.push(_DataArraySplitedCharacters[j]);
                        j++;
                        _ArrayTemp.push(_DataArraySplitedCharacters[j]);
                        _DataArrayConverted.push(_ArrayTemp);
                    }
                }
                ArrayPaths.push(_DataArrayConverted);
                ArrayJourneys.push({
                    name: journeyName,
                    first_last: journeyFirstLast,
                    length: journeyLength,
                    priceticket: journeyPriceTicket,
                    paths: _DataArrayConverted
                })
            }
            indexOfLine++;
        }

        const lineSymbol1 = {
            type: "simple-line",
            color: [91, 79, 227],//violet
            width: 6
        };

        const lineSymbol2 = {
            type: "simple-line",
            color: [240, 22, 22],//red
            width: 6
        };

        const popupTemplate = {
            title: "{Name}",
            content: [
                {
                    type: "fields",
                    fieldInfos: [
                        {
                            fieldName: "Name",
                            label: "Tuyến xe"
                        },
                        {
                            fieldName: "NameJourney",
                            label: "Tuyến đường"
                        },
                        {
                            fieldName: "PriceTickets",
                            label: "Giá vé (VND)"
                        },
                        {
                            fieldName: "Length",
                            label: "Độ dài tuyến (km)"
                        }
                    ]
                }
            ]
        };

        const polyline = {
            type: "polyline",
            paths: [],
        };
        var polylineGraphic;
        ///////////////  add Line graphicsLayer  /////////////////
        for (let index = 0; index < ArrayJourneys.length; index++) {
            polyline.paths = [ArrayJourneys[index].paths];
            var lineAtt = {
                Name: ArrayJourneys[index].name,
                NameJourney: ArrayJourneys[index].first_last,
                PriceTickets: ArrayJourneys[index].priceticket,
                Length: ArrayJourneys[index].length
            };
            if (index % 2 == 0) {
                polylineGraphic = new Graphic({
                    geometry: polyline,
                    symbol: lineSymbol1,
                    attributes: lineAtt,
                    popupTemplate: popupTemplate
                });
            } else {
                polylineGraphic = new Graphic({
                    geometry: polyline,
                    symbol: lineSymbol2,
                    attributes: lineAtt,
                    popupTemplate: popupTemplate
                });
            }

            graphicsLayer.add(polylineGraphic);
        }
        /////////////////////////////////////////////////////




    });
</script>