<div class="container">
    <h3>Tạo tuyến đường mới mới</h3>
    <form method="POST" action="/journeys/store">
        <div class="mainform">
            <div class="forminfor">
                <div class="form-group">
                    <label for="name">Tên Tuyến Đường</label>
                    <input type="text" class="form-control" id="name" name="name">
                </div>
                <div class="form-group">
                    <label for="name">Trạm đầu - cuối</label>
                    <input type="text" class="form-control" id="first_last" name="first_last">
                </div>
                <div class="form-group">
                    <label for="name">Thời gian hoạt động</label>
                    <input type="text" class="form-control" id="time" name="time">
                </div>
                <div class="form-group">
                    <label for="name">Loại phương tiện</label>
                    <select type="text" class="form-control" id="category" name="category">
                        <option value="1">1</option>
                        <option value="2">2</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="name">Giá vé (VNĐ)</label>
                    <input type="text" class="form-control" id="priceticket" name="priceticket">
                </div>
                <div class="form-group">
                    <label for="name">Tuyến buýt (Click vào bản đồ để lấy điểm vẽ)</label>
                    <textarea type="text" class="form-control" style="height: 100px" id="paths" name="paths"
                        readonly></textarea>
                </div>
            </div>
            <div style="width:60%; height: auto" id="viewDiv"
                class="esri-view esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge esri-view-orientation-landscape esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge">
                <div class="esri-view-root">
                    <div class="esri-view-surface esri-view-surface--touch-none" role="application" tabindex="0">
                        <canvas style="width: 478px; height: 450px; display: block;" width="478" height="450">
                        </canvas>
                    </div>
                    <div class="esri-overlay-surface">
                        <div style="visibility: hidden;"> </div>
                    </div>
                    <div class="esri-ui" style="inset: 0px;">
                        <div class="esri-ui-inner-container esri-ui-corner-container" style="inset: 15px 15px 30px;">
                            <div class="esri-ui-top-left esri-ui-corner">
                                <div class="esri-component esri-zoom esri-widget">
                                    <div class="esri-widget--button esri-widget esri-interactive" role="button"
                                        tabindex="0" title="Zoom in">
                                        <span aria-hidden="true" role="presentation"
                                            class="esri-icon esri-icon-plus"></span>
                                        <span class="esri-icon-font-fallback-text">Zoom in</span>
                                    </div>
                                    <div class="esri-widget--button esri-widget esri-interactive" role="button"
                                        tabindex="0" title="Zoom out">
                                        <span aria-hidden="true" role="presentation" class="esri-icon esri-icon-minus">

                                        </span>
                                        <span class="esri-icon-font-fallback-text">Zoom out</span>
                                    </div>
                                </div>
                            </div>
                            <div class="esri-ui-top-right esri-ui-corner"></div>
                            <div class="esri-ui-bottom-left esri-ui-corner"></div>
                            <div class="esri-ui-bottom-right esri-ui-corner"></div>
                        </div>
                        <div class="esri-ui-inner-container esri-ui-manual-container">
                            <div class="esri-component esri-attribution esri-widget">
                                <div class="esri-attribution__sources esri-interactive" tabindex="0" role="button">Esri,
                                    NASA,
                                    NGA, USGS | Esri Community Maps Contributors, Esri, HERE, Garmin, METI/NASA, USGS
                                </div>
                                <div class="esri-attribution__powered-by">Powered by <a
                                        class="esri-attribution__link esri-widget__anchor" href="http://www.esri.com/"
                                        target="_blank" rel="noreferrer">Esri</a></div>
                            </div>
                            <div class="esri-component esri-popup" role="presentation"></div>
                            <div class="esri-component esri-spinner"></div>
                        </div>
                    </div>
                </div>
                <div class="esri-view-user-storage"></div>
            </div>
        </div>
        <div class="containerbutton">
            <button type="submit" class="btn btn-primary">Tạo Tuyến đường</button>
            <button type="button" class="btn btn-danger" id="BtnRemovePoint">Xóa điểm vẽ</button>
        </div>
    </form>
</div>

<script>
    require([
        "esri/config",
        "esri/Map",
        "esri/views/MapView",
        "esri/rest/locator",
        "esri/widgets/Track",
        "esri/Graphic",
        "esri/layers/GraphicsLayer",
        "esri/widgets/Search"
    ], (esriConfig, Map, MapView, locator, Track, Graphic, GraphicsLayer, Search) => {

        esriConfig.apiKey = "AAPK1abceff074ac40efb53ec5b42a3eabf7h9BXaNUytC9SkeUdeDI6fVD4r_h2Hd5ZBwmtkd9B3AGk50DISEoXs4iYLxGCiVP8";

        const map = new Map({
            basemap: "arcgis-navigation" // Basemap layer
        });

        const view = new MapView({
            map: map,
            center: [106.75, 10.83],
            zoom: 11,
            container: "viewDiv"
        });

        const graphicsLayer = new GraphicsLayer();
        map.add(graphicsLayer);

        var btnRemovePoint = document.getElementById("BtnRemovePoint");
        var _paths = document.getElementById("paths")

        const simpleMarkerSymbol = {
            type: "simple-marker",
            color: [226, 119, 40],  // Orange
            outline: {
                color: [255, 255, 255], // White
                width: 1
            }
        }

        const lineSymbol = {
            type: "simple-line",
            color: [226, 119, 40],
            width: 6
        };

        var arrayPaths = []
        view.on("click", function (event) {
            view.hitTest(event).then(function (hitTestResults) { // Search for features where the user clicked
                if (hitTestResults.results) {
                    let xlongitude = event.mapPoint.longitude;
                    let ylatitude = event.mapPoint.latitude;
                    arrayPaths.push([xlongitude, ylatitude]);
                    let stringpaths = "";
                    graphicsLayer.removeAll();
                    arrayPaths.forEach(path => {
                        if (stringpaths != null) {
                            stringpaths += path + ",\
                        ";
                            graphicsLayer.add(new Graphic({ // Data attributes returned
                                geometry: {
                                    type: "point",
                                    longitude: path[0],
                                    latitude: path[1]
                                }, // Point returned
                                symbol: simpleMarkerSymbol
                            }));
                        }
                    })
                    graphicsLayer.add(new Graphic({
                        geometry: {
                            type: "polyline",
                            paths: [arrayPaths]
                        },
                        symbol: lineSymbol
                    }))
                    _paths.innerHTML = stringpaths;
                }
            });
        })
        btnRemovePoint.addEventListener("click", function () {
            if (arrayPaths != null) {
                arrayPaths.pop()
                let stringpaths = "";
                graphicsLayer.removeAll();
                arrayPaths.forEach(path => {
                    if (stringpaths != null) {
                        stringpaths += path + ",\
                        ";
                        graphicsLayer.add(new Graphic({ // Data attributes returned
                            geometry: {
                                type: "point",
                                longitude: path[0],
                                latitude: path[1]
                            }, // Point returned
                            symbol: simpleMarkerSymbol
                        }));
                    }
                })
                graphicsLayer.add(new Graphic({
                    geometry: {
                        type: "polyline",
                        paths: [arrayPaths]
                    },
                    symbol: lineSymbol
                }))
                _paths.innerHTML = stringpaths;
            }

        })

    });
</script>